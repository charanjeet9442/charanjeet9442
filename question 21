Q 20. Create a base class called shape. Use this class to store two double type values that could be used to compute the area of figures. Derive two specific classes called triangle and rectangle from base shape. Add to the base class, a member function get_data() to initialize base class data members and another member function display_area() to compute and display the area of figures. Make display_area() as a virtual function and redefine this function in the derived class to suit their 
requirements. Using these three classes, design a program that will accept dimensions of a triangle or a rectangle interactively and display the area. Remember the two values given as input will be treated as lengths oftwo sides in the case of rectangles and as base and height in the case of triangle and used as follows:
Area of rectangle = x * y
Area of triangle = ½ *x*y

#include <iostream> 
#include <string> 
using namespace std;
class Shape {
protected:
 double a, b;
public:
virtual void get_data() {
 cout << "Enter two numbers ";
  cin >> a >> b;
}
virtual void display_area () = 0;
};
class Triangle public Shape {
 public:
void get data() override {
 cout << "Enter base and height of the triangle: ";
 cin >> a >> b;
}
void display area () override {
 cout << "Area of the triangle: "; <<< 0.5 a b << endl;
}
};
class Rectangle public Shape {
public: 
void get data() override {
cout << “Enter length and breadth of the rectangle: “;
 cin >> a >> b;
}

Void display_area() override {
Cout << “Area of the rectangle: “ << a*b <<< endl; 1
}
};
Int main() {
char choice,
Shape * shape:
Cout << “Choose the figure (T/R): “;
Cin >> choice;
if (choice ‘T’ || choice == ‘t’)  {
shape new Triangle;
 else if (choice == ‘R’ || choice ==’r’) 
 shape new Rectangle;
else 
cout << “Invalid choice. Exiting…”;
 return 0;
}

Shape->get_data(); 
shape->display area(); 
delete shape; 
return 0;
}
